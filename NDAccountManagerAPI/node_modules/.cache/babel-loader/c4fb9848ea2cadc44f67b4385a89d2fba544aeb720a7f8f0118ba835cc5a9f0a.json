{"ast":null,"code":"/*! @azure/msal-common v14.13.0 2024-07-01 */\n'use strict';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nasync function getClientAssertion(clientAssertion, clientId, tokenEndpoint) {\n  if (typeof clientAssertion === \"string\") {\n    return clientAssertion;\n  } else {\n    const config = {\n      clientId: clientId,\n      tokenEndpoint: tokenEndpoint\n    };\n    return clientAssertion(config);\n  }\n}\nexport { getClientAssertion };","map":{"version":3,"names":["getClientAssertion","clientAssertion","clientId","tokenEndpoint","config"],"sources":["C:\\Users\\90542\\ndaccountmanager\\node_modules\\@azure\\msal-common\\src\\utils\\ClientAssertionUtils.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ClientAssertionCallback,\n    ClientAssertionConfig,\n} from \"../account/ClientCredentials\";\n\nexport async function getClientAssertion(\n    clientAssertion: string | ClientAssertionCallback,\n    clientId: string,\n    tokenEndpoint?: string\n): Promise<string> {\n    if (typeof clientAssertion === \"string\") {\n        return clientAssertion;\n    } else {\n        const config: ClientAssertionConfig = {\n            clientId: clientId,\n            tokenEndpoint: tokenEndpoint,\n        };\n        return clientAssertion(config);\n    }\n}\n"],"mappings":";;;AAAA;;;AAGG;AAOI,eAAeA,kBAAkBA,CACpCC,eAAiD,EACjDC,QAAgB,EAChBC,aAAsB;EAEtB,IAAI,OAAOF,eAAe,KAAK,QAAQ,EAAE;IACrC,OAAOA,eAAe;EACzB,OAAM;IACH,MAAMG,MAAM,GAA0B;MAClCF,QAAQ,EAAEA,QAAQ;MAClBC,aAAa,EAAEA;KAClB;IACD,OAAOF,eAAe,CAACG,MAAM,CAAC;EACjC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}